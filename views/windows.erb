<div class= "container-fluid">
<h1>Windows</h1>

<h5>Alright! Let's get started! First let's use the right click to create a folder on our Desktop. Let's call it.... Puppies! </h5>
<br>
<img  class="img-fluid" src="part1.png">

<h5>Great! now we'll open that folder and create 2 more folders. one called "views", and one called "public". </h5>
<p></p>
<p>-------------------------------------------------------------------------------------------------------------</p>
<br>

<img  class="img-fluid" src="win2.png">
<h5>We'll explain those folders as we get to them. Now lets create the "spine" of the app. Go into your text editor of choice (mines <a href="https://www.sublimetext.com/3">Sublime</a> (it says you have to pay for it, but you really don't have to. you can also use Windows Notepad. Wow! That's alot of parentheses! get used to that! ))</h5>



<img  class="img-fluid" src="win3.png">

<h5>
		  	Notice the first line: require 'sinatra'. All this means is that this program needs the sinatra gem to be run, because this is the "spine" of the app if we don't specify how it will be run, nothing will happen.

		  	On the third line we see "get '/' do". The '/' tells us that when we go to the website this is the page that opens up first and greets the user. 

		  	The fourth line "erb :home" tells the program what page to render or show when we land on the page. erb means embedded Ruby which is a file type that combines Ruby and HTML to make webpages. Great! We have a spine for our application! Let's go back to the first line. It says "require 'sinatra' ". As we said earlier this program needs the sinatra gem to run. Lets install that now:
		  	</h5>

		  	<img  class="img-fluid" src="sinatra_install.png">

		  	<p></p>
		  	<h5>Notice that we had to move through the folders (also known as directories) to get to where we wanted to be. The command for this is "cd" which stands for "change directory". We have to go through every directory to get to the directory where the app lives. so we 'cd Desktop' (remember that capitalization matters!) to take us to our Desktop. Then we cd into the folder puppies with cd "puppies". Once we're into that directory we type "gem install sinatra" to... well... install the sinatra gem. A Ruby gem is a pre packaged program that can be downloaded and used in your program. Now we have to install the bundler (which is also a gem) to complete the installation process. Lets do that now...  </h5>


		  	<img  class="img-fluid" src="sinatra_install2.png">

		  	<p></p>

		  	<h5>Lets use the command "bundle install" to finish installing the gems....</h5>

		  	<img  class="img-fluid" src="sinatra_install3.png">


		  	<h5>That didn't work! I tried it twice! Let's examine the error message. It says that it couldn't locate the gemfile. I guess we should make a Gemfile...</h5>

		  	<p></p>

		  	<img  class="img-fluid" src="gemfile.png">

		  	<p></p>

		  	<h5>So we made the Gemfile, which sets all of gems so we can install them. Let's fill up our new Gemfile...</h5>

		  	<img  class="img-fluid" src="gemfile2.png">

		  	<h5>Notice the first line "source 'https://rubygems.org'". This is the website that we will be downloading the gems from. Next comes the actual gems themselves which we explained earlier. let's install them...</h5>

			<img  class="img-fluid" src="gemfile3.png">	

			<p></p>

			<h5>OK! Let's finally see what our website looks like! In order to open the website type in "ruby main.rb"</h5>

			<img  class="img-fluid" src="server.png">

			<h5>The reason we type "ruby main.rb" is we are calling on our "spine" that we created earlier to "control" the application. This is a scaled down version of what's called MVC (Model View Controller) frameworks. This might not mean anything to you now, but once you progress to Rails, which is a MVC framework coded in Ruby (just like Sinatra) this will be very helpful. Main.rb is the controller in this sense. Lets go to http://localhost:4567/ to see our work... </h5>


			<img  class="img-fluid" src="localhost.png">



		  	<h5>
		  		Well that's not what we wanted! I know what I did wrong! I forgot to make a page for home! The home file will be saved as an erb file. erb stands for embedded ruby. Embedded ruby is a format that has both the attributes of ruby and of html. This makes it responsive to ruby webapps and easily styled like a regular webpage. Let's create it. 
		  	</h5>

		  	<img  class="img-fluid" src="home.png">



		  	<h5>And lets refresh to see it on our local host. Hit refresh on your browser</h5>

			<img class="img-fluid" src="home2.png">		  	

		  	<p>--------------------------------------------------------------------------------------------------------------------------</p>

		  	<h5>Yay! We have a functional webpage! It doesn't look very nice, it doesn't really tell us anything, and no one can see it except people using your computer. Why are we celebrating again? It's a good start! That's why! Let's add a few pictures! </h5>

		  	<img  class="img-fluid" src="imgs.png">

		  	<h5>Notice that we changed the words in the h1 tags to "Puppies!". I would recomend that you check out <a href="https://www.codecademy.com">Codeacademy</a> HTML and CSS classes to see what you can do to style your websites and add pictures. Speaking of adding pictures: notice the "img src"
		  	tag. I wonder what that does? Let's see! </p>

		  	<img class="img-fluid" src="website2.png">

		  	<p></p>

		  	<h5>The <img src> tag lets you grab a picture from the internet and put it in your webpage.

		  	Ok! Our website looks a little better, but we can make it look even better! How you ask? With CSS. CSS stands for cascading style sheets. This is what changes the color, or font, or positioning of the text and images on your website!</h5>

		  	<img class="img-fluid" src="subcss.png".png">

		  	<h5>Notice line 5. Inside the head of the html page we see a tag <link rel="stylesheet" type="test/css" href="puppies.css"> this links the page to a style sheet called puppies.css. Let's make that stylesheet now..</h5>

		  	<img class="img-fluid" src="cssalign.png".png">

		  	<h5>Body corresponds to the body tag in the html. Since the body tag surrounds the whole page, text-align center puts everything in the middle. Background-color sets the color to yellow</h5>

		  	<img class="img-fluid" src="yellow.png">

		  	<h5>Lovely! But... Lets say we really like Bulldogs. We like them so much that we want to make a seperate full page of just Bulldogs. We can do that pretty easily. First, lets add a route to the main.rb </h5>

		  	<img class="img-fluid" src="bulldog_routes.png">

		  	<h5>Now we make a page bulldogs.erb and add a picture of Bulldogs and a heading that says.. Bulldogs!</h5>

		  	<img class="img-fluid" src="bulldogs1.png">

		  	<img class="img-fluid" src="bulldog_route.png">

		  	<h5>And after doing this we go to http://localhost:4567/bulldogs and see..</h5>

		  	<img class="img-fluid" src="netbulldogs.png">


		  	





		  	</div>